/**
 * Appwrite
 * Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: team@appwrite.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AWUser.h
 *
 * User
 */

#ifndef AWUSER_H
#define AWUSER_H

#include <QJsonObject>

#include "src/model/AWUserHashOptionsInner_inner.h"
#include <QList>
#include <QString>

#include "src/AWEnum.h"
#include "src/AWObject.h"

#include "src/AWGlobalExport.h"

namespace OpenAPI {
class AWUserHashOptionsInner_inner;

class APPWRITE_EXPORT AWUser : public AWObject {
public:
    AWUser();
    AWUser(QString json);
    ~AWUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getHash() const;
    void setHash(const QString &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    QList<AWUserHashOptionsInner_inner> getHashOptions() const;
    void setHashOptions(const QList<AWUserHashOptionsInner_inner> &hash_options);
    bool is_hash_options_Set() const;
    bool is_hash_options_Valid() const;

    QString getRegistration() const;
    void setRegistration(const QString &registration);
    bool is_registration_Set() const;
    bool is_registration_Valid() const;

    bool isStatus() const;
    void setStatus(const bool &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getPasswordUpdate() const;
    void setPasswordUpdate(const QString &password_update);
    bool is_password_update_Set() const;
    bool is_password_update_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    bool isEmailVerification() const;
    void setEmailVerification(const bool &email_verification);
    bool is_email_verification_Set() const;
    bool is_email_verification_Valid() const;

    bool isPhoneVerification() const;
    void setPhoneVerification(const bool &phone_verification);
    bool is_phone_verification_Set() const;
    bool is_phone_verification_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    QList<AWUserHashOptionsInner_inner> hash_options;
    bool m_hash_options_isSet;
    bool m_hash_options_isValid;

    QString registration;
    bool m_registration_isSet;
    bool m_registration_isValid;

    bool status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString password_update;
    bool m_password_update_isSet;
    bool m_password_update_isValid;

    QString email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    bool email_verification;
    bool m_email_verification_isSet;
    bool m_email_verification_isValid;

    bool phone_verification;
    bool m_phone_verification_isSet;
    bool m_phone_verification_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::AWUser)

#endif // AWUSER_H
