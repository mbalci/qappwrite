/**
 * Appwrite
 * Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: team@appwrite.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "AWTeamsUpdateMembershipRolesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "src/AWHelpers.h"

namespace OpenAPI {

AWTeamsUpdateMembershipRolesRequest::AWTeamsUpdateMembershipRolesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

AWTeamsUpdateMembershipRolesRequest::AWTeamsUpdateMembershipRolesRequest() {
    this->initializeModel();
}

AWTeamsUpdateMembershipRolesRequest::~AWTeamsUpdateMembershipRolesRequest() {}

void AWTeamsUpdateMembershipRolesRequest::initializeModel() {

    m_roles_isSet = false;
    m_roles_isValid = false;
}

void AWTeamsUpdateMembershipRolesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void AWTeamsUpdateMembershipRolesRequest::fromJsonObject(QJsonObject json) {

    m_roles_isValid = ::OpenAPI::fromJsonValue(roles, json[QString("roles")]);
    m_roles_isSet = !json[QString("roles")].isNull() && m_roles_isValid;
}

QString AWTeamsUpdateMembershipRolesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject AWTeamsUpdateMembershipRolesRequest::asJsonObject() const {
    QJsonObject obj;
    if (roles.size() > 0) {
        obj.insert(QString("roles"), ::OpenAPI::toJsonValue(roles));
    }
    return obj;
}

QList<QString> AWTeamsUpdateMembershipRolesRequest::getRoles() const {
    return roles;
}
void AWTeamsUpdateMembershipRolesRequest::setRoles(const QList<QString> &roles) {
    this->roles = roles;
    this->m_roles_isSet = true;
}

bool AWTeamsUpdateMembershipRolesRequest::is_roles_Set() const{
    return m_roles_isSet;
}

bool AWTeamsUpdateMembershipRolesRequest::is_roles_Valid() const{
    return m_roles_isValid;
}

bool AWTeamsUpdateMembershipRolesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (roles.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool AWTeamsUpdateMembershipRolesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_roles_isValid && true;
}

} // namespace OpenAPI
